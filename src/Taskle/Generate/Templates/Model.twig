<?php
namespace {{ namespace }};

use Pinpoint\Shared\Entity;

class {{ entity.classname }} implements Entity
{
{% for field in fields %}
    protected {{ field | variable }};
{% endfor %}

    public function __construct({{ fields | parameterize }})
    {
{% for field in fields %}
        $this->set{{ field.name | StudlyCase }}({{ field | variable }});
{% endfor %}
    }
{% for field in fields %}

    protected function set{{ field.name | StudlyCase }}({{ field | parameter}})
    {
        {{ field | property }} = {{ field | variable }};
    }

    public function get{{ field.name | StudlyCase }}()
    {
        return {{ field | property }};
    }
{% if field.type == 'valueobject' %}

    public function same{{ field.name | StudlyCase }}As($other = null)
    {
        return {{ field | property }}->sameValueAs($other->getId());
    }
{% elseif field.type == 'string' %}

    public function same{{ field.name | StudlyCase }}As($other = null)
    {
        return (0 == strcmp({{ field | property }}, $other->get{{ field.name | StudlyCase }}()));
    }
{% else %}

    public function same{{ field.name | StudlyCase }}As($other = null)
    {
        return ({{ field | property }} === $other);
    }
{% endif %}
{% endfor %}
}
